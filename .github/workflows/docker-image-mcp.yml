name: Docker Image CI - MCP

on:
  push:
    branches: [ "main" ]
    paths:
      - 'mcp-servers/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'mcp-servers/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository}}-mcp

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #  安装 Nix 
      - uses: DeterminateSystems/determinate-nix-action@v3

      # 构建 Nix Flake 中定义的 Docker 镜像
      - name: Build Docker image with Nix
        run: nix build .#mcp-servers

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
            prefix=
            suffix=

      # 安装 Skopeo
      - name: Install skopeo
        run: sudo apt-get -y update && sudo apt-get -y install skopeo

      # 使用 Skopeo 推送镜像到 GitHub Container Registry (GHCR)
      - name: Push image to GHCR with skopeo
        run: |
          # 定义目标镜像的名称和标签
          DESTINATION="ghcr.io/${{ github.repository_owner }}/bigassistant-mcp:latest"

          skopeo copy \
            --dest-creds "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
            docker-archive:result \
            docker://${DESTINATION}
